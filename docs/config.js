// Configuration loader for web interface
// This file loads configuration from config.json generated by Python

let CONFIG = {
    charts_per_page: 5,  // Default fallback value
    pagination_enabled: true,
    lazy_loading: true
};

// Load configuration from JSON file
async function loadConfig() {
    try {
        const response = await fetch('config.json');
        if (response.ok) {
            const config = await response.json();
            CONFIG = {
                charts_per_page: config.pagination?.charts_per_page || 5,
                pagination_enabled: config.pagination?.enabled !== false,
                lazy_loading: config.pagination?.lazy_loading !== false
            };
            console.log('Configuration loaded:', CONFIG);
        } else {
            console.warn('Could not load config.json, using defaults');
        }
    } catch (error) {
        console.warn('Error loading configuration:', error);
    }
}

// Get charts per page value
function getChartsPerPage() {
    return CONFIG.charts_per_page;
}

// Get pagination enabled status
function isPaginationEnabled() {
    return CONFIG.pagination_enabled;
}

// Get lazy loading status
function isLazyLoadingEnabled() {
    return CONFIG.lazy_loading;
}

// Initialize configuration on page load
if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', loadConfig);
}